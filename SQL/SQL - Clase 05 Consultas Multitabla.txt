USE mi_bd;

/*
	##############################################
	# Ejercicios consultas multitabla  - Parte 1 #
	##############################################
*/

-- Une las tablas de empleados con departamentos y solo muestra las columnas nombre, apellido, edad, salario de empleados y la columna nombre de departamentos.
select e.nombre, e.apellido, e.edad, e.salario, d.nombre
from empleados e, departamentos d;

-- select (select count(*) from empleados) as cantidad_empleados, (select count(*) from departamentos) as 'Cantidad departamentos';

-- Une las tablas ventas con la tabla empleados donde se muestren todas las columnas de ventas exceptuando la columna empleado_id y en su lugar muestres el nombre y apellido de la tabla empleados.
select v.id, v.producto_id, v.cliente_id, v.cantidad, v.precio_unitario, v.monto_total, e.nombre, e.apellido
from ventas v, empleados e
where v.empleado_id = e.id;

-- Une las tablas ventas con la tabla productos donde se muestren todas las columnas de ventas exceptuando la columna producto_id y en su lugar muestres la columna nombre de la tabla productos.
select v.id, v.empleado_id, v.cliente_id, v.cantidad, v.precio_unitario, v.monto_total, p.nombre
from ventas v, productos phttps://codeshare.io/register?saveCodeshare=jAPJrL
where v.producto_id = p.id;
https://codeshare.io/register?saveCodeshare=jAPJrL
-- Une las tablas ventas con la tabla clientes donde se muestren todas las columnas de ventas exceptuando la columna cliente_id y en su lugar muestres la columna nombre de la tabla clientes.
select v.id, v.producto_id, v.empleado_id, v.cantidad, v.precio_unitario, v.monto_total, c.nombre as 'Nombre cliente' 
from ventas v, clientes c
where v.cliente_id = c.id;

-- Une las tablas ventas con la tablas empleados y departamentos donde se muestren todas las columnas de ventas exceptuando la columna empleado_id y en su lugar muestres el nombre y apellido de la tabla empleados y además muestres la columna nombre de la tabla departamentos.
select v.id, v.producto_id, v.cliente_id, v.cantidad, v.precio_unitario, v.monto_total, concat(e.nombre, ' ', e.apellido) as 'Vendedor', d.nombre as 'Departamento'
from empleados e, departamentos d, ventas v
where v.empleado_id = e.id and e.departamento_id = d.id;

-- Une las tablas ventas, empleados, productos y clientes donde se muestren las columnas de la tabla ventas reemplazando sus columnas de FOREIGN KEYs con las respectivas columnas de “nombre” de las otras tablas.
select v.id,p.nombre as 'Producto', concat(e.nombre, ' ', e.apellido) as 'Vendedor', v.cantidad, v.precio_unitario, v.monto_total, c.nombre as 'Nombre cliente'
from ventas v, clientes c, empleados e, productos p
where v.cliente_id = c.id and v.producto_id = p.id and v.empleado_id = e.id
order by v.id;

-- Calcular el salario máximo de los empleados en cada departamento y mostrar el nombre del departamento junto con el salario máximo.
select d.nombre as 'Departamento', max(e.salario)
from empleados e, departamentos d
where e.departamento_id = d.id
group by d.nombre;


/* ✏️Ejercicios consultas multitabla - Parte 2 

Calcular el monto total de ventas por departamento y mostrar el nombre del departamento junto con el monto 
total de ventas. */
SELECT d.nombre, SUM(monto_total) AS 'Venta Total'
FROM departamentos d, ventas v, empleados e
WHERE v.empleado_id = e.id AND e.departamento_id = d.id
GROUP BY d.nombre;

/* Encontrar el empleado más joven de cada departamento y mostrar el nombre del departamento junto con la edad 
del empleado más joven. */
SELECT d.nombre, MIN(edad) AS 'Menor Edad'
FROM departamentos d, empleados e
WHERE e.departamento_id = d.id
GROUP BY d.nombre;

/* Calcular el volumen de productos vendidos por cada producto (por ejemplo, menos de 5 “bajo”, 
menos 8 “medio” y mayor o igual a 8 “alto”) y mostrar la categoría de volumen junto con la cantidad y 
el nombre del producto. */
SELECT  p.nombre AS "Nombre del producto",
CASE
    WHEN SUM(v.cantidad) < 5 THEN 'Bajo'
    WHEN SUM(v.cantidad) < 8 THEN 'Medio'
    ELSE 'Alto'
END AS "Volumen de ventas",
SUM(v.cantidad) AS "Cantidad total vendida"
FROM ventas v, productos p
WHERE v.producto_id = p.id
GROUP BY p.nombre;

/* Encontrar el cliente que ha realizado el mayor monto total de compras y mostrar su nombre y el monto total. 
ordenarlos de mayor a menor monto total*/
SELECT c.nombre, SUM(v.monto_total) AS 'Monto Total'
FROM clientes c, ventas v
WHERE v.cliente_id = c.id
GROUP BY c.nombre
ORDER BY SUM(v.monto_total) DESC;

/* Lo mismo pero esta vez mostrar solo al cliente que mayor monto total tiene y a ninguno mas*/
SELECT c.nombre, SUM(v.monto_total) AS 'Monto Total'
FROM clientes c, ventas v
WHERE v.cliente_id = c.id
GROUP BY c.nombre
ORDER BY SUM(v.monto_total) DESC
LIMIT 1;

/* Calcular el precio promedio de los productos vendidos por cada empleado y mostrar el nombre del empleado 
junto con el precio promedio de los productos que ha vendido. */
SELECT e.nombre, AVG(v.monto_total)
FROM ventas v, empleados e
WHERE v.empleado_id = e.id
GROUP BY e.nombre;

/* Encontrar el departamento con el salario mínimo más bajo entre los empleados y mostrar el nombre del 
departamento junto con el salario mínimo más bajo. */
SELECT d.nombre, MIN(e.salario) AS 'Salario Mínimo'
FROM departamentos d, empleados e 
WHERE e.departamento_id = d.id
GROUP BY d.nombre;

/* Encuentra el departamento con el salario promedio más alto entre los empleados mayores de 30 años y 
muestra el nombre del departamento junto con el salario promedio. Limita los resultados a mostrar solo 
los departamentos con el salario promedio mayor a 3320. */
SELECT d.nombre, AVG(e.salario) AS 'Salario Promedio'
FROM departamentos d, empleados e
WHERE e.departamento_id = d.id AND e.edad > 30
GROUP BY d.nombre
HAVING AVG(e.salario) > 3320;

/* ✏️  Actividad: Ejercicios Complementarios
✨ Estos ejercicios son de tipo complementario. Esto quiere decir que te ayudará a avanzar en profundidad en 
el tema visto, pero no son obligatorios. Te recomendamos intentar con tu equipo trabajar algunos de ellos. */

/* Encontrar la cantidad de productos vendidos por cada empleado y mostrar el nombre del empleado junto con 
la cantidad de productos vendidos. */
SELECT CONCAT(e.nombre, ' ', e.apellido) AS empleado, COUNT(v.cantidad) AS 'Productos Vendidos'
FROM empleados e, ventas v
WHERE v.empleado_id = e.id
GROUP BY empleado; -- podria tambien hacer "GROUP BY CONCAT(e.nombre, ' ', e.apellido)"

/* Calcular el monto total de ventas por cada cliente y mostrar el nombre del cliente junto con el monto 
total de sus compras. */
SELECT c.nombre, SUM(v.monto_total) AS 'total gastado'
FROM ventas v, clientes c
WHERE v.cliente_id = c.id
GROUP BY c.nombre;

/* Encontrar el producto más caro vendido y mostrar su nombre y precio. */
SELECT p.nombre, MAX(v.precio_unitario) AS precio
FROM productos p, ventas v
WHERE v.producto_id = p.id
GROUP BY p.nombre
ORDER BY MAX(v.precio_unitario) DESC
LIMIT 1;

/* Calcular el salario promedio de los empleados en cada departamento y mostrar el nombre del departamento 
junto con el salario promedio. */
SELECT d.nombre AS departamento, AVG(e.salario)
FROM empleados e, departamentos d
WHERE e.departamento_id = d.id
GROUP BY d.nombre;

/* Encontrar la cantidad total de ventas realizadas por cada empleado y mostrar el nombre y apellido del 
empleado junto con la cantidad total de ventas. */
SELECT CONCAT(e.nombre, ' ', e.apellido) AS empleado, COUNT(*)
FROM ventas v, empleados e
WHERE v.empleado_id = e.id
GROUP BY CONCAT(e.nombre, ' ', e.apellido)
ORDER BY COUNT(*) ASC;

/* Encuentra la cantidad de ventas realizadas por cada empleado y muestra el nombre y apellido del 
empleado junto con la cantidad total de ventas. Limita los resultados a mostrar solo a los empleados 
que hayan realizado más de 5 ventas y ordenarlos de forma descendente con respecto a la cantidad de ventas. */
SELECT CONCAT(e.nombre, ' ', e.apellido) AS empleado, COUNT(*)
FROM ventas v, empleados e
WHERE v.empleado_id = e.id
GROUP BY CONCAT(e.nombre, ' ', e.apellido)
HAVING COUNT(*) > 5
ORDER BY COUNT(*) DESC;

/* Calcula el monto total vendido por cada empleado y muestra el nombre del empleado junto con el 
monto total. Usa la cláusula HAVING para filtrar a aquellos empleados que hayan vendido más de 10 
productos en total. Muestra el resultado en orden descendente según el monto total vendido. */
SELECT CONCAT(e.nombre, ' ', e.apellido) AS empleado, SUM(v.monto_total)
FROM ventas v, empleados e
WHERE v.empleado_id = e.id
GROUP BY empleado
HAVING SUM(v.monto_total) > 10
ORDER BY SUM(v.monto_total) DESC;

/* Encuentra el monto total vendido a cada cliente y muestra el nombre del cliente junto con el 
monto total. Usa la cláusula HAVING para filtrar a aquellos clientes cuyo monto total promedio en sus 
compras sea superior a $1500. Muestra el resultado en orden descendente según el monto total vendido. */
SELECT c.nombre, SUM(v.monto_total) AS 'total gastado'
FROM ventas v, clientes c
WHERE v.cliente_id = c.id
GROUP BY c.nombre
HAVING AVG(v.monto_total) > 1500
ORDER BY SUM(v.monto_total) DESC;

/* Calcula la cantidad total de ventas realizadas a cada cliente y muestra el nombre del cliente junto 
con la cantidad total de ventas. Limita los resultados a mostrar solo a los clientes que hayan realizado 
más de 3 ventas ordénalos de forma descendente según la cantidad de ventas. */
SELECT c.nombre, COUNT(*)
FROM clientes c, ventas v
WHERE c.id = v.cliente_id
GROUP BY c.nombre
HAVING COUNT(*) > 3
ORDER BY COUNT(*) DESC;

/* Encuentra los productos más caros vendidos (precio mayor a 1000), muestra su nombre y precio y 
ordenarlos de forma descendente por precio. */
SELECT p.nombre, MAX(v.precio_unitario) AS precio
FROM productos p, ventas v
WHERE v.producto_id = p.id AND v.precio_unitario > 1000
GROUP BY p.nombre
ORDER BY precio DESC;