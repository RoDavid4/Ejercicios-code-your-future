USE mi_bd;

/* Ejercicios cl√°usula IN */

/*  Encuentra los empleados cuyos IDs son 1, 3 o 5. */
SELECT * 
FROM empleados
WHERE id IN (1, 3, 5);

 /* Busca los productos con IDs 2, 4 o 6 en la tabla de productos. */
 SELECT * 
 FROM productos 
 WHERE id IN (2, 4, 6);

 /* Encuentra las ventas que tienen los clientes con IDs 1, 3 o 5. */
 SELECT * 
 FROM ventas 
 WHERE cliente_id IN (1, 3, 5);


/* ‚úèÔ∏èEjercicios cl√°usula LIKE */

/*  Encuentra los empleados cuyos nombres comienzan con "L". */
SELECT * FROM empleados WHERE nombre LIKE 'L%';

/* Busca los productos cuyos nombres contengan la palabra "Tel√©fono". */
SELECT * FROM productos WHERE nombre LIKE '%Tel√©fono%';

/* Encuentra los clientes cuyas direcciones contienen la palabra "Calle". */
SELECT * FROM clientes WHERE LOWER(direccion) LIKE '%calle%';  -- Es buena practica agregar la funcion LOWER(col)

/* ‚úèÔ∏èEjercicios cl√°usula ORDER BY: */

/* Ordena los empleados por salario de manera ascendente. */
SELECT * FROM empleados ORDER BY salario ASC;

/* Ordena los productos por nombre de manera descendente. */
SELECT * FROM productos ORDER BY nombre DESC;

/* Ordena las ventas por cantidad de manera ascendente y luego por precio_unitario de manera descendente. */
SELECT * FROM ventas ORDER BY cantidad ASC, precio_unitario DESC;
-- Ordena por cantidad y a criterio de desempate ordena por precio_unitario.

/* ‚úèÔ∏èEjercicios LIMIT */

/* Muestra los 5 productos m√°s caros de la tabla "productos". */
SELECT * FROM productos ORDER BY precio DESC LIMIT 5;

/* Muestra los 10 primeros empleados en orden alfab√©tico por apellido. */
SELECT * FROM empleados ORDER BY apellido ASC LIMIT 10;

/* Muestra las 3 ventas con el monto total m√°s alto. */
SELECT * FROM ventas ORDER BY monto_total DESC LIMIT 3;

/* ‚úèÔ∏èEjercicios AS */

/* Crea una consulta que muestre el salario de los empleados junto con el salario 
aumentado en un 10% nombrando a la columna como ‚ÄúAumento del 10%‚Äù. */
SELECT nombre, apellido, salario, (salario * 1.1) AS 'aumento del 10%' FROM empleados;

/* Crea una consulta que calcule el monto total de las compras realizadas por cliente 
y que la columna se llame ‚ÄúMonto total gastado‚Äù. */
SELECT cliente_id, SUM(monto_total) AS 'Monto total gastado' FROM ventas GROUP BY cliente_id;

/* Muestra los nombres completos de los empleados concatenando los campos "nombre" y "apellido" 
y que la columna se llame ‚ÄúNombre y apellido‚Äù. */
SELECT CONCAT(nombre, ' ', apellido) AS 'Nombre y apellido' FROM empleados;

/* üí° Recuerda el uso de la funci√≥n CONCAT(texto1, texto2, texto3). */

/* Ejercicios CASE */

/* Crea una consulta que muestre el nombre de los productos y los categorice como "Caro" 
si el precio es mayor o igual a $500, "Medio" si es mayor o igual a $200 y menor que $500, y "Barato" 
en otros casos. */
SELECT nombre,
CASE
    WHEN precio >= 500 THEN 'Caro'
    WHEN precio >= 200 THEN 'Medio'
    ELSE 'Barato'
END AS 'categoria', precio
FROM productos ORDER BY precio DESC;

/* Crea una consulta que muestre el nombre de los empleados y los categorice como "Joven" 
si tienen menos de 30 a√±os, "Adulto" si tienen entre 30 y 40 a√±os, y "Mayor" si tienen m√°s de 40 a√±os. */
SELECT nombre, apellido, edad,
CASE
    WHEN edad < 30 THEN 'Joven'
    WHEN edad BETWEEN 30 AND 40 THEN 'Adulto'
    ELSE 'Mayor'
END AS 'categoria'
FROM empleados;

/* Crea una consulta que muestre el ID de la venta y los categorice como "Poca cantidad" 
si la cantidad es menor que 3, "Cantidad moderada" si es igual o mayor que 3 y menor que 6, y "Mucha cantidad" 
en otros casos. */
SELECT id_venta, cantidad,
CASE
    WHEN cantidad < 3 THEN 'Poca cantidad'
    WHEN cantidad BETWEEN 3 AND 5 THEN 'Cantidad moderada'
    ELSE 'Mucha cantidad'
END AS 'categoria'
FROM ventas;

/* Crea una consulta que muestre el nombre de los clientes y los categorice como "Comienza con A" 
si su nombre comienza con la letra 'A', "Comienza con M" si comienza con 'M' y "Otros" en otros casos. */
SELECT nombre,
CASE
    WHEN nombre LIKE 'A%' THEN 'Comienza con A'
    WHEN nombre LIKE 'M%' THEN 'Comienza con M'
    ELSE 'Otros'
END AS 'categoria'
FROM clientes;

/* Crea una consulta que muestre el nombre de los empleados y los categorice como "Salario alto" 
si el salario es mayor o igual a $3500, "Salario medio" si es mayor o igual a $3000 y menor que $3500, y 
"Salario bajo" en otros casos. */
SELECT nombre, apellido, salario,
CASE
    WHEN salario >= 3500 THEN 'Salario alto'
    WHEN salario >= 3000 THEN 'Salario medio'
    ELSE 'Salario bajo'
END AS 'categoria'
FROM empleados;

/* Ejercicios Funci√≥n MAX() 
Encuentra el salario m√°ximo de todos los empleados. */
SELECT MAX(salario) AS 'Salario Maximo'  FROM empleados;

/* Encuentra la cantidad m√°xima de productos vendidos en una sola venta. */
SELECT MAX(cantidad) AS 'Cant max prod en una venta' FROM ventas;

/* Encuentra la edad m√°xima de los empleados. */
SELECT MAX(edad) AS 'Edad Maxima' FROM empleados;

/* ‚úèÔ∏èEjercicios Funci√≥n MIN()
Encuentra el salario m√≠nimo de todos los empleados. */
SELECT MIN(salario) AS 'Salario Minimo'FROM empleados;

/* Encuentra la cantidad m√≠nima de productos vendidos en una sola venta. */
SELECT MIN(cantidad) AS 'Cant min prod en una venta' FROM ventas;

/* Encuentra la edad m√≠nima de los empleados. */
SELECT MIN(edad) AS 'Edad minima' FROM empleados;

/* ‚úèÔ∏èEjercicios de la Funci√≥n COUNT()
Cuenta cu√°ntos empleados hay en total. */
SELECT COUNT(*) FROM empleados;

/* Cuenta cu√°ntas ventas se han realizado. */
SELECT COUNT(*) FROM ventas;

/* Cuenta cu√°ntos productos tienen un precio superior a $500. */
SELECT COUNT(*) FROM productos WHERE precio > 500;

/* ‚úèÔ∏èEjercicios de la Funci√≥n SUM()
Calcula la suma total de salarios de todos los empleados. */
SELECT SUM(salario) AS 'Suma total salarios' FROM empleados;

/* Calcula la suma total de montos vendidos en todas las ventas. */
SELECT SUM(monto_total) FROM ventas;

/* Calcula la suma de precios de productos con ID par. */
SELECT SUM(precio) FROM productos WHERE id % 2 = 0;

/* ‚úèÔ∏èEjercicios Funci√≥n AVG()
Calcula el salario promedio de todos los empleados. */
SELECT AVG(salario) AS 'Salario promedio' FROM empleados;

/* Calcula el precio unitario promedio de todos los productos. */
SELECT AVG(precio) AS 'Precio unitario promedio' FROM productos;

/* Calcula la edad promedio de los empleados. */
SELECT AVG(edad) AS 'Edad promedio' FROM empleados;